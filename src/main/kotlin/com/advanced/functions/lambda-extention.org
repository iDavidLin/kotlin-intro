#+TITLE: Lambda Extention
* Lambda Extention or Lambda with Receiver
[[https://kotlinlang.org/docs/lambdas.html#function-types][Function types]] with receiver, such as =A.(B) -> C=, can be instantiated with a special form of function literals â€“ function literals with receiver.

As said above, Kotlin provides the ability to call an instance of a function type with receiver providing the receiver object.

Inside the body of the function literal, the receiver object passed to a call becomes an implicit this, so that you can access the members of that receiver object without any additional qualifiers, or access the receiver object using a =this= expression.

This behavior is similar to extension functions, which also allow you to access the members of the receiver object inside the body of the function.

Example:
#+begin_src kotlin
class HTML {
    fun body() {...}
}
fun html(init: HTML.() -> Unit): HTLM {
    val html = HTML()
    html.init()
    return html
}

html {
    body ()
}
#+end_src
